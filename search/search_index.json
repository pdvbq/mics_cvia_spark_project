{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>This is a project for the class in Computer Vision &amp; Image Analyis. The project is consists in solving the Spark challenge, which has 2 parts - detection and pose estimation.</p> <p>Note</p> <p>Our group will focus mainly in the first part, and if time allows we tackle the second part.</p>"},{"location":"#group-members","title":"Group Members","text":"<ul> <li>Pedro Soares</li> <li>Pavel Chernakov</li> <li>Cosmin Radoi</li> <li>Julien Simon</li> <li>Nesryne MEJRI (Mentor)</li> </ul>"},{"location":"1.installation/","title":"\u2699\ufe0f Installation","text":"<p>This guide is meant to help you install and use the project. We offer 2 main ways you can install using 2 different package managers. The first package manager is UV, which is the new kid in the block. For the second, we have Conda.</p>"},{"location":"1.installation/#install-with-uv-recommenced","title":"Install with UV (Recommenced)","text":"<p>Warning</p> <p>In order to use UVs package manager, please make sure to install it. You can find installation instructions here. In case you are using Linux/MacOS, you can run the following command:</p> <pre><code>curl -LsSf https://astral.sh/uv/install.sh | sh\n</code></pre> <ol> <li>Go to project root</li> <li> <p>Install project dependencies</p> <pre><code>uv sync\n</code></pre> </li> </ol> <p>Tip</p> <p>You can additionally create a python virtual environment from UV. Just run <code>uv venv</code> which create a <code>.venv</code> environment. Then just run <code>source .venv/bin/activate</code> to activate or <code>deactive</code> for deactivating the environment.</p>"},{"location":"1.installation/#install-with-conda","title":"Install with Conda","text":"<p>Warning</p> <p>Conda can be installed as a minimal package by following the guide here.</p> <p>Upon cloning the repository, run <code>conda env create -f environment.yml</code> while inside the repository. Once the environment is set up, activate it with <code>conda activate spark</code>.</p>"},{"location":"2.usage/","title":"\ud83d\ude80 Usage","text":"<p>Note</p> <p>When using UV package manager, you can run anything by using the prefix <code>uv run ...</code> instead of <code>python3 ...</code>. This way, you will not need to load/activate the environment. it will be done automatically.</p>"},{"location":"2.usage/#datasets-download","title":"Datasets Download","text":"<p>Before anything, you must download the datasets. For now, only stream1 dataset is available to download.</p> <p>Just run the following command <code>python3 main.py fetch stream1</code>, and it will start download the dataset and unzip it. (This will take some time)</p>"},{"location":"2.usage/#convertgenerate-dataset-formats","title":"Convert/Generate Dataset Formats","text":""},{"location":"2.usage/#yolo-dataset-format","title":"YOLO Dataset Format","text":"<p>YOLO uses it's own format, different from the one provided by the challenge. A command is available to convert the current one into a valid YOLO dataset format.</p> <p>Note</p> <p>This will not change the default format, but this will just make sure to add whatever seems necessary</p> <pre><code>python3 main.py generate stream1\n</code></pre>"},{"location":"2.usage/#word-on-our-cli-application","title":"Word On Our CLI Application","text":"<p>Our project is meant to be used as a cli application which should facilitate our workflow.</p> <p>To find out which commands are available, run <code>python3 main.py --help</code></p> <p>Example</p> <pre><code>\u276f uv run main.py --help\n\n Usage: main.py [OPTIONS] COMMAND [ARGS]...\n\n\u256d\u2500 Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --install-completion          Install completion for the current shell.           \u2502\n\u2502 --show-completion             Show completion for the current shell, to copy it   \u2502\n\u2502                               or customize the installation.                      \u2502\n\u2502 --help                        Show this message and exit.                         \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\u256d\u2500 Commands \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 fetch                                                                             \u2502\n\u2502 generate                                                                          \u2502\n\u2502 pipeline                                                                          \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre>"},{"location":"3.hpc/","title":"\ud83d\udcbb\ud83d\ude80 HPC Usage","text":""},{"location":"3.hpc/#install-project","title":"Install Project","text":"<ol> <li>Add your HPC account ssh keys into your GitHub account</li> </ol> <pre><code>cat ~/.ssh/id_ecdsa.pub\n</code></pre> <ol> <li>Clone our repository inside your HPC session</li> </ol> <pre><code>git clone git@github.com:pdvbq/mics_cvia_spark_project.git\n</code></pre> <ol> <li>Install UV</li> </ol> <pre><code>curl -LsSf https://astral.sh/uv/install.sh | sh\n</code></pre> <ol> <li>Go to repository root</li> </ol> <pre><code>cd mics_cvia_spark_project\n</code></pre> <ol> <li>Sync UV packages</li> </ol> <pre><code>uv sync\n</code></pre>"},{"location":"3.hpc/#train-example-yolo11","title":"Train example (YOLO11)","text":"<p>Note</p> <p>Make sure you are in the root of the repository</p> <pre><code>sbatch ./scripts/yolo11x_spark_train.sh\n</code></pre>"},{"location":"3.hpc/#useful-commands","title":"Useful Commands","text":"<ul> <li>View you current batches running</li> </ul> <pre><code>squeue -u $USER\n</code></pre> <ul> <li>Stop a batch</li> </ul> <pre><code>scancel &lt;id of batch&gt;\n</code></pre> <p>Note</p> <p>In order to get the batch id, you can run the squeue command as listed above</p>"}]}